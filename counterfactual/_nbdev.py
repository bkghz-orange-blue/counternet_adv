# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"train_model": "00_train.ipynb",
         "Clamp": "05a_baseline_algos.ipynb",
         "ExplainerBase": "01_interface.ipynb",
         "LocalExplainerBase": "01_interface.ipynb",
         "GlobalExplainerBase": "01_interface.ipynb",
         "ABCBaseModule": "01_interface.ipynb",
         "dict2json": "02_data.ipynb",
         "load_json": "02_data.ipynb",
         "update_json_file": "02_data.ipynb",
         "bn_func": "02_data.ipynb",
         "x1_to_x3": "02_data.ipynb",
         "x1x2_to_x4": "02_data.ipynb",
         "bn_gen": "02_data.ipynb",
         "load_adult_income_dataset": "02_data.ipynb",
         "load_learning_analytic_data": "02_data.ipynb",
         "NumpyDataset": "02_data.ipynb",
         "PandasDataset": "02_data.ipynb",
         "BaseModule": "03b_counterfactual_net.ipynb",
         "uniform": "03b_counterfactual_net.ipynb",
         "PredictiveTrainingModule": "03b_counterfactual_net.ipynb",
         "hinge_loss": "03b_counterfactual_net.ipynb",
         "cat_normalize": "03b_counterfactual_net.ipynb",
         "l1_mean": "03b_counterfactual_net.ipynb",
         "get_loss_functions": "03b_counterfactual_net.ipynb",
         "get_optimizers": "03b_counterfactual_net.ipynb",
         "smooth_y": "03b_counterfactual_net.ipynb",
         "use_grad": "03b_counterfactual_net.ipynb",
         "CounterfactualTrainingModule": "03b_counterfactual_net.ipynb",
         "AdvCounterfactualTrainingModule": "03b_counterfactual_net.ipynb",
         "AdvBiLevelCounterfactualTrainingModule": "03b_counterfactual_net.ipynb",
         "LinearBlock": "03b_counterfactual_net.ipynb",
         "MultilayerPerception": "03b_counterfactual_net.ipynb",
         "BaselineModel": "03b_counterfactual_net.ipynb",
         "ConvBlock": "03b_counterfactual_net.ipynb",
         "MultilayerConv": "03b_counterfactual_net.ipynb",
         "CounterfactualModel": "03b_counterfactual_net.ipynb",
         "AdvCounterfactualModel": "03b_counterfactual_net.ipynb",
         "AdvCounterfactualFramework": "03b_counterfactual_net.ipynb",
         "ConvCounterNet": "03b_counterfactual_net.ipynb",
         "VanillaCF": "05a_baseline_algos.ipynb",
         "DiverseCF": "05a_baseline_algos.ipynb",
         "AE": "05a_baseline_algos.ipynb",
         "ProtoCF": "05a_baseline_algos.ipynb",
         "VAE": "05a_baseline_algos.ipynb",
         "VAE_CF": "05a_baseline_algos.ipynb",
         "load_trained_model": "05b_evaluate.ipynb",
         "proximity": "05b_evaluate.ipynb",
         "cf_gen_parallel": "05b_evaluate.ipynb",
         "model_cf_gen": "05b_evaluate.ipynb",
         "evaluate": "05b_evaluate.ipynb",
         "test_evaluate": "05b_evaluate.ipynb",
         "adv_validity": "06_adversarial.ipynb",
         "avg_decrease": "06_adversarial.ipynb",
         "avg_validity_changes": "06_adversarial.ipynb",
         "ExperimentLogger": "06_adversarial.ipynb",
         "ExperimentLoggerLocal": "06_adversarial.ipynb",
         "ExperimentLoggerWanb": "06_adversarial.ipynb",
         "experiment_step": "06_adversarial.ipynb",
         "local_explainer_experiment_step": "06_adversarial.ipynb",
         "l_inf_proj": "06_adversarial.ipynb",
         "l2_proj": "06_adversarial.ipynb",
         "LimeExplanation": "06a_adversarial_baselines.ipynb",
         "LimeTabularExplainer": "06a_adversarial_baselines.ipynb",
         "LocalApprox": "06a_adversarial_baselines.ipynb",
         "ROAR": "06a_adversarial_baselines.ipynb"}

modules = ["train.py",
           "interface.py",
           "utils.py",
           "net.py",
           "training_module.py",
           "baseline_cfs.py",
           "evaluate.py",
           "adversarial_experiment.py",
           "adversarial_baselines.py"]

doc_url = "https://birkhoffg.github.io/counterfactual/"

git_url = "https://github.com/birkhoffg/counterfactual/tree/master/"

def custom_doc_links(name): return None
